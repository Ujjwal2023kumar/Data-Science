CREATE TABLE STUDENTS (
    NAME VARCHAR(50) NOT NULL,
    ROLLNO INTEGER PRIMARY KEY,
    CITY VARCHAR(50),
    EMAIL VARCHAR(100) UNIQUE,
    AGE INT CHECK (AGE >= 18)
);

INSERT INTO STUDENTS VALUES ('UJJWAL', 100, 'MEERUT', 'ujjwal@example.com', 21);
INSERT INTO STUDENTS VALUES ('RAHUL', 101, 'DELHI', 'rahul@example.com', 22);
INSERT INTO STUDENTS VALUES ('PRIYA', 102, 'MUMBAI', 'priya@example.com', 20);
INSERT INTO STUDENTS VALUES ('ANKIT', 103, 'LUCKNOW', 'ankit@example.com', 21);
INSERT INTO STUDENTS VALUES ('NEHA', 104, 'PUNE', 'neha@example.com', 21);
INSERT INTO STUDENTS VALUES ('ROHAN', 105, 'CHENNAI', 'rohan@example.com', 21);
INSERT INTO STUDENTS VALUES ('SNEHA', 106, 'BANGALORE', 'sneha@example.com', 21);
INSERT INTO STUDENTS VALUES ('AMIT', 107, 'KOLKATA', 'amit@example.com', 21);
INSERT INTO STUDENTS VALUES ('SONIA', 108, 'JAIPUR', 'sonia@example.com', 21);
INSERT INTO STUDENTS VALUES ('VIKAS', 109, 'HYDERABAD', 'vikas@example.com', 21);


SELECT * FROM STUDENTS;

UPDATE STUDENTS SET CITY = 'NOIDA' WHERE ROLLNO = 101;
DELETE FROM STUDENTS WHERE ROLLNO = 102;
ALTER TABLE STUDENTS ADD COLUMN PHONE VARCHAR(15);
ALTER TABLE STUDENTS MODIFY CITY VARCHAR(100);
ALTER TABLE STUDENTS ADD COLUMN CLASS_ID INT;
ALTER TABLE STUDENTS ADD CONSTRAINT fk_class FOREIGN KEY (CLASS_ID) REFERENCES CLASS(CLASS_ID);
INSERT INTO STUDENTS (NAME, ROLLNO, CITY, EMAIL, AGE) VALUES ('ANKIT', 103, 'LUCKNOW', 'ankit@example.com', 23) ON DUPLICATE KEY UPDATE CITY = 'LUCKNOW', AGE = 23;
ALTER TABLE STUDENTS RENAME TO STUDENT_DETAILS;
COMMENT ON TABLE STUDENT_DETAILS IS 'Table storing student personal and academic details';
COMMENT ON COLUMN STUDENT_DETAILS.NAME IS 'Full name of the student';
ALTER TABLE STUDENT_DETAILS DROP COLUMN PHONE;

DROP TABLE STUDENT_DETAILS;
DROP TABLE CLASS;

-- dcl
-- grant
-- revoke


-- tcl
-- commit
-- rollback
-- savepoint

CREATE TABLE EMPLOYEE(
  EMP_NAME VARCHAR(50),
  EMP_ID NUMBER PRIMARY KEY,
  LOCATION VARCCHAR(50) NOT NULL,
  EMAIL VARCHAR(50) UNIQUE
);


SELECT COUNT(NAME) FROM STUDENTS;
SELECT MAX(EMP_ID) FROM STUDENTS;
SELECT MIN(EMP_ID) FROM STUDENTS;
SELECT AVG(EMP_ID) FROM STUDENTS;

  
SELECT * FROM EMPLOYEE;
